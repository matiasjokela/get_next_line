
#include "get_next_line.h"
#include <stdio.h>

static	int	read_fd(const int fd, char **line, char *str_arr[FD], int end);

static	int read_buffer(const int fd, char **line, char *str_arr[FD])
{
	char	buf[BUFF_SIZE + 1];
	int		bytes_read;
	int		end;
	char	*tmp;

	if (read(fd, buf, 0) < 0)
		return (-1);
	end = 1;
	while ((bytes_read = read(fd, buf, BUFF_SIZE)))
	{
		if (bytes_read < BUFF_SIZE)
			end = 0;
		tmp = ft_strjoin(str_arr[fd], buf);
		free(str_arr[fd]);
		str_arr[fd] = tmp;
		//printf("In array: %s\n", str_arr[fd]);
		printf("Read_buffer, return read_fd\n");
		return (read_fd(fd, line, str_arr, end));
	}	
	return (0);
}

static	int	read_fd(const int fd, char **line, char *str_arr[FD], int end)
{
	int		i;
	char	*tmp;

	i = 0;
	while (str_arr[fd][i])
	{
		if (str_arr[fd][i] == '\n')
		{
			str_arr[fd][i] = '\0';
			*line = ft_strdup(str_arr[fd]);
			tmp = ft_strdup(&(str_arr)[fd][i + 1]);
			free(str_arr[fd]);
			str_arr[fd] = ft_strdup(tmp);
			free(tmp);
			printf("Read_fd, return read_buffer\n");		
			return (1);
		}
		i++;
	}
	printf("Read_fd, return read_buffer\n");
	return (read_buffer(fd, line, str_arr));
}




int			get_next_line(const int fd, char **line)
{
	static char	*str_arr[FD];

	if (!str_arr[fd])
		return (read_buffer(fd, line, str_arr));
	return (read_fd(fd, line, str_arr, 1));
}


int main(void)
{
	char **s;

	int fd = open("todo.txt", O_RDONLY);
	int fd1 = open("toinenTesti.txt", O_RDONLY);
	get_next_line(fd, s);
	printf("\n----------\n%s\n", *s);	
	get_next_line(fd1, s);
	printf("%s\n", *s);		
	get_next_line(fd, s);
	printf("%s\n", *s);		
	get_next_line(fd1, s);
	printf("%s\n", *s);		
	get_next_line(fd, s);
	printf("%s\n", *s);		
	get_next_line(fd1, s);
	printf("%s\n", *s);		
	get_next_line(fd, s);
	printf("%s\n", *s);		
	get_next_line(fd1, s);
	printf("%s\n", *s);				



	return (0);

	//printf("%d\n", fd);
}